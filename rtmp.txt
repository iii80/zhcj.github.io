1、编译安装
git clone git@github.com:arut/nginx-rtmp-module.git
mv nginx-rtmp-module /data/lnmp/rtmp
cd /tmp/nginx-1.15.5
./configure --prefix=/data/lnmp/nginx --user=www --group=www --pid-path=/run/nginx.pid --lock-path=/run/nginx.lock --http-client-body-temp-path=/tmp/client --http-proxy-temp-path=/tmp/proxy --http-fastcgi-temp-path=/tmp/fastcgi --http-uwsgi-temp-path=/tmp/uwsgi --http-scgi-temp-path=/tmp/scgi --http-log-path=/data/lnmp/log/nginx/access.log --error-log-path=/data/lnmp/log/nginx/error.log  --with-http_ssl_module --with-http_v2_module --with-stream_realip_module --with-http_stub_status_module --add-module=/data/lnmp/rtmp
make -j8
#出现this statement may fall through [-Werror=implicit-fallthrough=]错误，解决办法：
#vi nginx-1.15.5/objs/Makefile
#找到 -Werrori 后将其去掉 在重新make编译就可以了
make install
2、rtmp配置（添加hls支持）
#在nginx.conf中的http后面添加(与http协议并列)
rtmp {
    server {
        listen 1935;
        application live {
            live on;
            hls on;
            hls_path /data/www/live;
            hls_fragment 5s; 
        }
    }
}
说明：
*rtmp是协议名称
*server 说明内部中是服务器相关配置
*listen 监听的端口号, rtmp协议的默认端口号是1935
*application 访问的应用路径是 zbcs
*live on; 开启实时
*hls on; 开启hls
*hls_path /data/www/live; hls推流请求路径
*hls_fragment 5s; 每个ts文件包含5秒的视频内容
3、rtmp推流测试
#用ffmpeg推流
ffmpeg -re -i /data/v.mp4 -vcodec copy -f flv rtmp://127.0.0.1/live/test
4、用支持rtmp或m3u8格式的播放器观看直播，如vlc或smplayer
地址：
rtmp://127.0.0.1/live/test
http://127.0.0.1/live/test.m3u8
5、H5或flash网页播放（videojs+videojs-flash）
未完待续...
